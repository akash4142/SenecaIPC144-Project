*****************************************************************************
                        Assignment 1 - Milestone 3
Full Name  :Akash yadav
Student ID#:172566218
Email      :ayadav35@myseneca.ca
Section    :NII

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
1. first additional function which i created in order to make my work little bit easier is "Swap" function. This function is helping me to swap the appointment time if the time is not in the right order. 
Prototype of the function is "void swap(struct Appointment *x, struct Appointment *y)".In this function i have changed the location of the first parameter with the second paramater with the help of a temporary parameter.

Apart form this function I created is "bubblesort" function. This function can help to put all the appointments data in the time order. it is helping me to organize the appointment file.
prototype - void bubblesort (struct Appointment arr[],int n )"
two loops are used in which first ensures the most recent appointment on the top of file and second one ensures every appointment data is in correct position .

Third additional function is "leapyear" function . this is to change the february data range to 29 when it is the leap year . prototype - int leapyeaer(int y)
what i did is to that i used the flag to determine if it is a leap year or not. 

2. function called "addappointment" it is the function which i spent my most of the time i have coded it into to around 150 lines . First 100 lines of code I saved by applying pattern recognition and use of functions.In this function, i have to take lots of input from the user , such as patients number, appointment years, month, day, hour, minute.After getting the number i have to validate it whether it is positive number or not .In addition, i need to set a range of each year, month, day, hour, minute. Therefore, I used "inputIntPositive" function and "inputIntRange" function for every input. Besides, I used "findPatientIndexByPatientNum" function and "leapYear" function. These functions help save many lines of code and help with readability and maintainability of the code. If i write a same codes many times instead of using functions, we will get more workload than before. If unfortunately one piece of codes has bugs, we need to look for where the bugs are and read codes line by line. However, if we use functions, we can only modify the function we defined to upgrade and maintain our program easily. It is also easy to read for other programmers.

3. In the first week, i develop some general code for the milestone, and it laid a good foundation for part 2 and part 3. When we write codes for the part 2 and part 3, we would use lots of functions we create in part 1. In the second week, we develop a program for the patient, including patient information file view, search, edit, add, and remove. And in the last week, we develop a program for the appointment system. When we develop a big program, we can break it down into some small parts and accomplish them one by one. When we finish one part of a big program, we will feel a sense of achievement and have the motivation to do the next part. If we do the whole program at once, we may not know how to deal with it and give up quickly. In the milestone, I met many challenges, such as "inputCharOption" in part 1, "editPatient" in part 2, and ranking the appointment time order in part 3. To deal with them, I spent lots of time searching, learning, and thinking. If you want to learn programming well, you must work hard every day because there will be lots of new techniques updates every day..